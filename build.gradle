plugins {
id 'java'
id 'project-report'
id 'org.ajoberstar.git-publish' version "3.0.0"
id 'org.ajoberstar.grgit' version "4.1.0"
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

test {
    ignoreFailures = true
    useJUnitPlatform()
}

sourceSets {
    main {
        java{
            srcDirs = ["src/main/java/"]
        }
    }

    test {
        java {
            srcDirs = ["src/test/java/"]
        }
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

task reports(dependsOn: ['javadoc', 'check', 'test']){
    description 'generates reports'
}


task clonePages(dependsOn: 'reports') {
    doLast {
        mkdir 'build/gh-pages'
        def thisRepo = rootProject.projectDir.toString()
        def pagesDir = "$buildDir/gh-pages"
        project.delete {
            delete pagesDir
        }
        def grgit = git.clone {
            dir = pagesDir
            uri = thisRepo
            bare = false
            refToCheckout = 'gh-pages'
        }
        grgit.checkout {
            branch = 'gh-pages'
        }
    }
}

task copyReports (type: Copy, dependsOn: 'clonePages') {
    from "$buildDir/reports"
    into "$buildDir/gh-pages/reports"
}

task copyDocs(type: Copy, dependsOn: 'copyReports'){
    from "$buildDir/docs"
    into "$buildDir/gh-pages/docs"
}

task deployReports (dependsOn: 'copyDocs' ) {
    group = "Reporting"
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    doLast {
        def pagesDir = "$buildDir/gh-pages"
        def grgit = git.open {
            dir = pagesDir + "/.git"
        }
        grgit.add (update: false, patterns: ['docs/'])
        grgit.add (update: true, patterns: ['docs/'])
        grgit.add (update: false, patterns: ['reports/'])
        grgit.add (update: true, patterns: ['reports/'])
        grgit.commit {
            message = "Updating web pages"
        }
        grgit.push {}
    }
}